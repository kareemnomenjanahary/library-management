openapi: 3.0.3
info:
  title: Library API
  version: 1.1.0
  description: STD22001
servers:
  - url: https://library.com
paths:
  /books:
    get:
      summary: Get all books
      description: The returned books are ordered by updated datetime.
      operationId: getBooks
      parameters:
        - $ref: '#/components/parameters/queryPagination'
        - in: query
          name: bookName
          description: Filter return books by given name
          required: false
          schema:
            type: string
        - in: query
          name: releaseDate
          description: Filter by the date of the release date range
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          $ref: '#/components/responses/Response200'
        '400':
          $ref: '#/components/responses/Response400'

    put:
      summary: Create or update a list of books
      operationId: createUpdateBooks
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/ImportBookJSON'
                  - $ref: '#/components/schemas/ImportBookExcel'
      responses:
        '200':
          $ref: '#/components/responses/Response200'
        '400':
          $ref: '#/components/responses/Response400'

  /books/{bookId}/authors/{authorId}:
    put:
      tags:
        - books
      summary: Attach author to a book
      description: Attach author to a book by ID.
      operationId: attachAuthorToBook
      parameters:
        - in: path
          name: bookId
          description: The ID of the book
          required: true
          schema:
            type: string
        - in: path
          name: authorId
          description: The ID of the author
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Response200'
        '400':
          $ref: '#/components/responses/Response400'

  /authors:
    get:
      summary: Get all authors
      description: Get a list of all authors.
      operationId: getAuthors
      parameters:
        - $ref: '#/components/parameters/pathPagination'
        - in: query
          name: authorName
          description: Filter authors by name
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/Response200'
        '400':
          $ref: '#/components/responses/Response400'

    put:
      summary: Create or update authors
      operationId: createUpdateAuthors
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/ImportAuthorJSON'
                  - $ref: '#/components/schemas/ImportAuthorExcel'
      responses:
        '200':
          $ref: '#/components/responses/Response200'
        '400':
          $ref: '#/components/responses/Response400'

    delete:
      summary: Delete authors
      operationId: deleteAuthors
      responses:
        '200':
          $ref: '#/components/responses/Response200'
        '400':
          $ref: '#/components/responses/Response400'

  /books/authors:
    put:
      tags:
        - books
        - author
      summary: Attach authors to books
      description: Attach multiple authors to multiple books by ID.
      operationId: attachAuthorsToBooks
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/UpdateBookAuthor"
      responses:
        '200':
          $ref: '#/components/responses/Response200'
        '400':
          $ref: '#/components/responses/Response400'

  /books/import:
    post:
      summary: Import books
      operationId: importBooks
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/ImportBookJSON'
                  - $ref: '#/components/schemas/ImportBookExcel'
      responses:
        '200':
          $ref: '#/components/responses/Response200'
        '400':
          $ref: '#/components/responses/Response400'

  /authors/import:
    post:
      summary: Import authors
      operationId: importAuthors
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/ImportAuthorJSON'
                  - $ref: '#/components/schemas/ImportAuthorExcel'
      responses:
        '200':
          $ref: '#/components/responses/Response200'
        '400':
          $ref: '#/components/responses/Response400'

components:
  parameters:
    queryPagination:
      name: page
      in: query
      description: Number of the page
      schema:
        type: integer
        default: 1
    pathPagination:
      name: page
      required: true
      in: path
      description: number of the page
      schema: 
        type: integer
        default: 1

  responses:
    Response200:
      description: Default response structure for 200 status
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CommonResponse'

    Response400:
      description: Default response structure for 400 status
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CommonResponse'

  schemas:
    Book:
      $ref: '#/components/schemas/Book'
    crupdateBooks:
      $ref: '#/components/schemas/crupdateBooks'
    UpdateBookAuthor:
      $ref: '#/components/schemas/UpdateBookAuthor'
    ImportBookJSON:
      $ref: '#/components/schemas/ImportBookJSON'
    ImportBookExcel:
      $ref: '#/components/schemas/ImportBookExcel'
    ImportAuthorJSON:
      $ref: '#/components/schemas/ImportAuthorJSON'
    ImportAuthorExcel:
      $ref: '#/components/schemas/ImportAuthorExcel'
    Author:
      $ref: '#/components/schemas/Author'
    ImportAuthor:
      $ref: '#/components/schemas/ImportAuthor'
    CommonResponse:
      type: object
      properties:
        status:
          type: object
          properties:
            code:
              type: integer
            message:
              type: string
        body:
          type: object
